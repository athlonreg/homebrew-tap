#!/bin/bash

# ******************************************
# app2dmg.sh

# Bash script to create a DMG from
# an Application Bundle on macOS

# Print help info
help(){
	echo -e "Please input correct app path!\nExample:
	app2dmg /Applications/QQ.app
	"
}

# Check that a single argument has been passed.
# If it hasn't, display usage and exit.
if [[ ! $# == 1 || ${1} == "-h" || ${1} == "--help" ]];then
	help
	exit 1
fi

# Check that the passed argument is an app bundle or a folder.
# If it is, continue.  If it isn't, display warning message
if [[ -d "${1}" ]]; then
	
	# Set Desktop to work dir
	cd ~/Desktop

	# Remove full path from passed argument, leaving just the
	# name of the app bundle in the variable
	APP_BUNDLE=$(basename "${1}")

	# Remove the extension and store in variable
	APP_NAME="${APP_BUNDLE%.*}"

	# Retrieve the version of the app bundle, and store in variable
	APP_VERSION=$(defaults read "${1}/Contents/Info.plist" CFBundleShortVersionString)
	
	# Setup app full path
	APP_PATH=$(echo "${1}" | sed 's/ /\ /g')
	
	# Setup dmg size
	BASE_SIZE=$(du -sh "${APP_PATH}" | awk '{print $1}')
	DMG_SIZE=$(echo ${BASE_SIZE} | sed 's/[a-zA-Z]//g')
	DMG_SIZE_UNIT=$(echo ${BASE_SIZE} | sed 's/[0-9]//g')
	((DMG_SIZE*=2))
	DMG_SIZE=$(echo ${DMG_SIZE}${DMG_SIZE_UNIT})

	# Create a r/w SPARSE image with a maximum of 60GB of data,
	# and mount it
	echo "Creating '${APP_NAME} v${APP_VERSION}.dmg'..."
	hdiutil create -size ${DMG_SIZE} -type SPARSE -volname "${APP_NAME} v${APP_VERSION}" -fs JHFS+ -quiet "${APP_NAME}.sparseimage"
	hdiutil attach -quiet "${APP_NAME}.sparseimage"

	# Copy the app bundle to the SPARSE image
	echo "Copying '${APP_BUNDLE}' to Disk Image..."
	rsync -aEh "${1}" "/Volumes/${APP_NAME} v${APP_VERSION}"

	# Create a shortcut to the local Applications folder
	# on the SPARSE image
	ln -s /Applications "/Volumes/${APP_NAME} v${APP_VERSION}"

	# Unmount the SPARSE Image
	hdiutil eject -quiet "/Volumes/${APP_NAME} v${APP_VERSION}"

	# Convert the SPARSE image to the final compressed DMG file
	hdiutil convert -format UDZO "${APP_NAME}.sparseimage" -quiet -o "${APP_NAME} v${APP_VERSION}.dmg"

	# Delete the SPARSE image, which is no longer needed
	rm "${APP_NAME}.sparseimage"

	echo "'${APP_NAME} v${APP_VERSION}.dmg' has been created."
else
	echo "Path ${1} not found."
	exit 1
fi
